#해당 문제는 '이것이 취업을 위한 코딩 테스트다'의 문제입니다.
'''
동빈이는 두 개의 배열 A와 B를 가지고 있다. 두 배열은 N개의 원소로 구성되어 있으며, 배열의 원소는 모두 자연수이다. 동빈이는 최대 K번의 바꿔치기 연산을 수행할 수 있는데, 바꿔치기 연산이란 배열 A에 있는 원소 하나와 배열 B에 있는 원소 하나를 골라서 두 원소를 서로 바꾸는 것을 말한다. 동빈이의 최종 목표는 배열 A의 원소의 합이 최대가 되도록 하는 것이며, 여러분은 동빈이를 구해야 합니다. 
N,k 그리고 배열 A와 B의 정보가 주어졌을 때, 최대 K번의 바꿔치기 연산을 수행하여 만들 수 있는 배열 A의 모든 원소의 합의 최댓값을 출력하는 프로그램을 작성하시오
'''

n, k  = map(int,input().split())
a = []
b = []
a = list(map(int,input().split()))
b = list(map(int,input().split()))

a.sort()
b.sort(reverse = True)
# 문제의 조건을 보면 k가 주어졌을 때, 최대 K번의 바꿔치기를 할 수 있다는 것은 꼭 k번 모두 바꿔치기를 할 필요는 없다는 뜻으로 해석할 수 있다. 그렇다면 a와 b를 비교하면서 a가 b보다 크다면 반복문을 탈출하면 된다. 왜냐하면 a는 오름차순으로 정렬햇고, b는 내림차순으로 정렬했기 때문이다. 
for i in range(k) :
  if a[i] < b[i] :
    a[i], b[i] = b[i] = a[i]
  else :
    break

print(sum(a))
